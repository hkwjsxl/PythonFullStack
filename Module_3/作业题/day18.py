# 1.简述面向对象的成员和其特点
"""
- 变量
    - 实例变量，属于对象。每个对象中都封装各自的值。只能通过对象来进行调用。
    - 类变量，属于类。每个类中各自保存的数据。可以通过对象和类来进行读取。
- 方法
    - 绑定方法，默认有一个self参数，由对象进行调用（此时self就等于调用方法的这个对象）【对象&类均可调用】
    - 类方法，默认有一个cls参数，用类或对象都可以调用（此时cls就等于调用方法的这个类）【对象&类均可调用】
    - 静态方法，无默认参数，用类和对象都可以调用。【对象&类均可调用】
- 属性
    基于方法+property装饰器实现可以实现，可以实现
        obj.属性名
        obj.属性名 = 123
        del obj.属性名
    语法和方法的对应关系。
"""
# 特殊成员
"""
__init__        调用时触发
__new__         构造时触发
__str__         输出时触发
__dict__        构造参数字典

__getitem__，__setitem__，__delitem__
    可以像字典一样操作（取值，设置值，删除）
__call__        对象调用时触发

__add__         对象加值时触发
__mul__         对象乘值时触发

__iter__
__next__
    迭代器：拥有
"""

# 2.@staticmethod 和 @classmethod的作用是什么
"""
两者都不需要传入self参数，都不用通过实例化去调用方法（类名.方法()）

@classmethod
    修饰类方法，第一个参数为cls，值为当前调用的对象本身
@staticmethod
    修饰静态方法，可以没有参数，相当于在类中定义一个普通的函数

"""

# 3.面向对象中如何让成员变为私有。
"""
成员前方加入__
"""

# 4.`__new__`方法的作用？
"""
构造一个对象，在初始化对象之前触发
"""

# 5.简述你理解的：迭代器、生成器、可迭代对象。
"""
迭代器
    拥有__iter__,__next__方法，
    并且__iter__返回迭代器对象本身，即self，__next__返回下一个数据，如果没有了，要抛出StopIteration异常
生成器
    同样拥有__iter__,__next__方法，生成器类似一种特殊的迭代器类
可迭代对象
    拥有__iter__方法，并且该方法返回一个迭代器对象，
    可迭代对象可通过for循环取值，在循环内部先执行__iter__方法，取出其迭代器对象，再通过next功能逐步取值
"""

# 6
"""
666
1
18
99
1
999
1
99
"""

# 7
"""
f3
f2
999
None
"""

# 8
"""  Foo.f1(obj)
f1
f2
f1
f2
"""

# 9
"""
f1
f2
f3
"""

# 10
"""
f1
f2
f3
"""

# 11
"""  对象._类名__方法或属性
666
1
1000
2
1
2
667
"""

# 12
"""  先输出display里面的print
8
8 None
9
9 None
"""

# 13
"""
1 1
666
666
"""

# 14
"""
十个Foo对象
十个Foo对象(传入5)
十个Foo对象(传入当前i)
"""

# 15
"""
1
2
3
"""

# 16
"""
1 666
2 666
3 666
"""

# 17
"""
3
19 5
20 5
666 33
"""

# 18
"""
l
'StarkConfig' object is not subscriptable
"""

# 19
"""
class Context:
    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        ...

    def do_something(self):
        print('success')


with Context() as ctx:
    ctx.do_something()
"""

# 20
"""
我是武沛齐,年龄18,属于人事部
我是alex,年龄18,属于人事部
"""

# 21
"""
中国
<__main__.Node object at 0x00000183AF71DF70>
河南省
<__main__.Node object at 0x00000183AF71DA00>
河北省
"""

# 22
"""
中国
河南省
河北省
石家庄
廊坊
雄安
"""