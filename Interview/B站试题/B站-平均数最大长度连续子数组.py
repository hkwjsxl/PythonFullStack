"""
给定一个长度为n的数组，数组中每个元素都是整数，找到其中平均数最大的长度为k连续子数组。请你输出该子数组所有元素的平均数。

例如输入n=4，k=2，数组为[1,2,3,1]，则输出2.50。

注意：遇到不符合预期的输入时，返回0.00。
示例1
输入输出示例仅供调试，后台判题数据一般不包含示例
输入
复制
4,2,[1,2,3,1]
输出
复制
2.50

"""

"""
思路：
这道题可以使用滑动窗口的方法来解决。

首先，我们可以计算出数组中每个长度为 k 的子数组的平均数，并找出最大的平均数即可。
我们可以使用滑动窗口的方法，通过移动窗口来计算每个子数组的平均数。

具体来说，我们可以先计算前 k 个元素的和 sum，然后维护一个长度为 k 的窗口，每次将窗口向右移动一个位置。
当窗口移动到下一个位置时，我们需要减去窗口左端点的元素并加上窗口右端点的元素，然后计算新的平均数。
我们可以维护一个变量 max_avg 来记录当前最大的平均数，每次更新最大平均数即可。
"""


class Solution:
    def cal_max_avg_for_sub_list(self, n, k, nums) -> float:
        # 前k个数字和
        temp_sum = max_sum = sum(nums[:k])
        # 循环拿 k至最后一个数字
        for i in range(k, n):
            # 减去的是最左边的
            temp_sum += nums[i] - nums[i - k]
            max_sum = max(max_sum, temp_sum)
        return max_sum / k


ret = Solution().cal_max_avg_for_sub_list(4, 2, [1, 2, 3, 1])
print(ret)
