"""
最长连续子数组
给定一个由若干 0 和 1 组成的数组 A，我们最多可以将 K 个值从 0 变成 1 ，返回仅包含 1 的最长（连续）子数组的长度
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
示例1
输入例子：
[1,1,1,0,0,0,1,1,1,1,0],2
输出例子：
6
例子说明：
可以将输入中的第3个0和第4个0变成1，新数组为[1,1,1,0,0,1,1,1,1,1,1]，因此最长连续1的子数组长度为6
示例2
输入例子：
[0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1],3
输出例子：
10
例子说明：
可以将输入中的第3个0、第4个0，第5个0都变成1，新数组为[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]，因此最长连续1的子数组长度为10
"""


class Solution:
    def GetMaxConsecutiveOnes(self, arr, k):
        return


ret = Solution().GetMaxConsecutiveOnes([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 2)
print(ret)
